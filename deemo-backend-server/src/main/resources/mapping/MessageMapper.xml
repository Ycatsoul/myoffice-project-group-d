<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.capgemini.cn.deemo.mapper.MessageMapper">
    <!-- 发送消息 -->
    <insert id="sendMsg" useGeneratedKeys="true" parameterType="com.capgemini.cn.deemo.data.domain.Message" keyProperty="id">
        INSERT INTO Message(messageId, messageTitle, messageTypeId, messageContent, beginTime, endTime, sendUserId, isPublished, publishTime)
        VALUES(#{messageId}, #{messageTitle}, #{messageTypeId}, #{messageContent}, #{beginTime}, #{endTime}, #{sendUserId}, #{isPublished}, #{publishTime})
    </insert>

    <insert id="addMsgToAllUser">
        INSERT INTO MessageTrans(messageId,recipientId) VALUES
        <foreach collection="users" item="user" separator=",">
            (#{messageid},#{user.id})
        </foreach>
    </insert>
    <!-- 查询消息 -->
    <select id="getMsg" resultMap="BaseResultMap">
        select mt.*,msg.`id`,msg.`messageId`,msg.`messageTitle`,msg.`messageTypeId`,msg.`messageContent`,msg.`messageContent`,msg.`beginTime`,msg.`endTime`,msg.`sendUserId`,msg.`isPublished`,msg.`publishTime`from MessageTrans mt,Message msg where mt.`messageId`=msg.`messageId` and mt.`recipientId`=#{recipientId} order by msg.`beginTime`
    </select>
    <resultMap id="BaseResultMap" type="com.capgemini.cn.deemo.data.domain.MessageTrans">
        <id column="messageTransId" property="messageTransId" jdbcType="BIGINT" />
    <!-- <result column="messageTransId" property="messageTransId" jdbcType="INTEGER" />-->
        <result column="messageId" property="messageId" jdbcType="INTEGER" />
        <result column="recipientId" property="recipientId" jdbcType="INTEGER" />
        <result column="isRead" property="isRead" jdbcType="INTEGER" />
        <association property="message" javaType="com.capgemini.cn.deemo.data.domain.Message">
        <id column="messageId" property="messageId" jdbcType="BIGINT" />
        <result column="messageTitle" property="messageTitle" jdbcType="VARCHAR" />
        <result column="messageTypeId" property="messageTypeId" jdbcType="INTEGER" />
        <result column="beginTime" property="beginTime" jdbcType="TIMESTAMP" />
        <result column="endTime" property="endTime" jdbcType="TIMESTAMP" />
        <result column="sendUserId" property="sendUserId" jdbcType="INTEGER" />
        <result column="isPublished" property="isPublished" jdbcType="INTEGER" />
        <result column="publishTime" property="publishTime" jdbcType="TIMESTAMP" />
    </association>
</resultMap>
    <!-- 更新消息 -->
    <update id="updateMsg" parameterType="com.capgemini.cn.deemo.data.domain.Message">
        UPDATE Message set messageTitle=#{messageTitle}, messageTypeId=#{messageTypeId}, messageContent=#{messageContent}, beginTime=#{beginTime}, endTime=#{endTime}, sendUserId=#{sendUserId}, isPublished=#{isPublished}, publishTime=#{publishTime}
        WHERE messageId=#{messageId}
    </update>

    <!-- 更新消息状态 -->
    <update id="markPublished" parameterType="Long">
        UPDATE Message SET isPublished = 1 WHERE messageId = #{messageId}
    </update>

    <!-- 更新阅读消息状态 -->
    <update id="markRead" parameterType="Long">
        UPDATE MessageTrans SET isRead = 1 WHERE messageId = #{messageId}
    </update>

    <!-- 删除消息 -->
    <delete id="deleteMsg" parameterType="Long">
        DELETE FROM Message WHERE messageId = #{messageId}
    </delete>
</mapper>